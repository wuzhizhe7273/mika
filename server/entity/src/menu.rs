//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "menu")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub name: String,
    pub menu_type: String,
    pub desc: String,
    pub parent_id: Option<Uuid>,
    pub order: i32,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::ParentId",
        to = "Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SelfRef,
    #[sea_orm(has_many = "super::r_role_menu::Entity")]
    RRoleMenu,
}

impl Related<super::r_role_menu::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RRoleMenu.def()
    }
}

impl Related<super::role::Entity> for Entity {
    fn to() -> RelationDef {
        super::r_role_menu::Relation::Role.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::r_role_menu::Relation::Menu.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
