//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "comment")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub user_id: i64,
    pub forum_id: i64,
    pub parent_id: Option<i64>,
    pub reply_id: Option<i64>,
    pub article_id: i64,
    pub content: String,
    pub updated_at: DateTimeWithTimeZone,
    pub created_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::article::Entity",
        from = "Column::ArticleId",
        to = "super::article::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Article,
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::ParentId",
        to = "Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SelfRef,
    #[sea_orm(
        belongs_to = "super::forum::Entity",
        from = "Column::ForumId",
        to = "super::forum::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Forum,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::ReplyId",
        to = "super::user::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User2,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User1,
}

impl Related<super::article::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Article.def()
    }
}

impl Related<super::forum::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Forum.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
